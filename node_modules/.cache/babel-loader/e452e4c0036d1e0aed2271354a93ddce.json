{"ast":null,"code":"var _jsxFileName = \"/Users/SBJ/project/React/banking_project/src/pages/ListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/common/Header\";\nimport axios from \"axios\";\nimport Card from \"../list/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListPage = () => {\n  _s();\n\n  const [acountList, setAccountList] = useState([]);\n  useEffect(() => {\n    getAccountList();\n  }, []);\n\n  const getAccountList = () => {\n    const option = {\n      method: \"GET\",\n      url: \"/v2.0/user/me\",\n      headers: {\n        Authorization: `bearer ${localStorage.getItem(\"accessToken\")}`\n      },\n      params: {\n        user_seq_no: localStorage.getItem(\"userSeqNum\")\n      }\n    };\n    axios(option).then(response => {\n      console.log(response.data);\n      setAccountList(response.data.res_list);\n    });\n  }; //getAccountList useEffect 활용해서 불러오기 불러온다음에 acountList set 해주기\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"\\uACC4\\uC88C \\uBAA9\\uB85D \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), acountList.map(account => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        bankName: account.bank_name,\n        fintechUseNo: account.fintech_use_num\n      }, account.fintech_use_num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(ListPage, \"Pezh35Hhf6vsBC3rrsMewYVssbU=\");\n\n_c = ListPage;\nexport default ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["/Users/SBJ/project/React/banking_project/src/pages/ListPage.js"],"names":["React","useState","useEffect","Header","axios","Card","ListPage","acountList","setAccountList","getAccountList","option","method","url","headers","Authorization","localStorage","getItem","params","user_seq_no","then","response","console","log","data","res_list","map","account","bank_name","fintech_use_num"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+BP,QAAQ,CAAC,EAAD,CAA7C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,cAAc,GAAG,MAAM;AAC3B,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,GAAG,EAAE,eAFQ;AAGbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AADtD,OAHI;AAMbC,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAEH,YAAY,CAACC,OAAb,CAAqB,YAArB;AADP;AANK,KAAf;AAUAZ,IAAAA,KAAK,CAACM,MAAD,CAAL,CAAcS,IAAd,CAAmBC,QAAQ,IAAI;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAf,MAAAA,cAAc,CAACY,QAAQ,CAACG,IAAT,CAAcC,QAAf,CAAd;AACD,KAHD;AAID,GAfD,CALqB,CAsBrB;;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,EAEGjB,UAAU,CAACkB,GAAX,CAAeC,OAAO,IAAI;AACzB,0BACE,QAAC,IAAD;AAEE,QAAA,QAAQ,EAAEA,OAAO,CAACC,SAFpB;AAGE,QAAA,YAAY,EAAED,OAAO,CAACE;AAHxB,SACOF,OAAO,CAACE,eADf;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA,CAFH;AAAA,kBADF;AAcD,CAtCD;;GAAMtB,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/common/Header\";\nimport axios from \"axios\";\nimport Card from \"../list/Card\";\n\nconst ListPage = () => {\n  const [acountList, setAccountList] = useState([]);\n  useEffect(() => {\n    getAccountList();\n  }, []);\n  const getAccountList = () => {\n    const option = {\n      method: \"GET\",\n      url: \"/v2.0/user/me\",\n      headers: {\n        Authorization: `bearer ${localStorage.getItem(\"accessToken\")}`,\n      },\n      params: {\n        user_seq_no: localStorage.getItem(\"userSeqNum\"),\n      },\n    };\n    axios(option).then(response => {\n      console.log(response.data);\n      setAccountList(response.data.res_list);\n    });\n  };\n\n  //getAccountList useEffect 활용해서 불러오기 불러온다음에 acountList set 해주기\n\n  return (\n    <>\n      <Header title=\"계좌 목록 확인\"></Header>\n      {acountList.map(account => {\n        return (\n          <Card\n            key={account.fintech_use_num}\n            bankName={account.bank_name}\n            fintechUseNo={account.fintech_use_num}\n          ></Card>\n        );\n      })}\n    </>\n  );\n};\n\nexport default ListPage;\n"]},"metadata":{},"sourceType":"module"}