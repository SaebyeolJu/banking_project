{"ast":null,"code":"var _jsxFileName = \"/Users/SBJ/project/React/banking_project/src/pages/AuthResultPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport axios from \"axios\";\nimport AuthButton from \"../components/common/AuthButton\";\nimport qs from \"qs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthResultPage = () => {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  const {\n    code\n  } = queryString.parse(search); // proxcy setting\n\n  const getAccessToken = () => {\n    const sendData = qs.stringify({\n      code: code,\n      client_id: \"10866f6e-c280-41e3-bcc0-c3df9cddbcca\",\n      client_secret: \"cd76aef5-bb1e-4cb5-8acb-412577f8c714\",\n      redirect_uri: \"http://localhost:3000/authResult\",\n      grant_type: \"authorization_code\"\n    });\n    const option = {\n      method: \"POST\",\n      url: \"/oauth/2.0/token\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      data: sendData\n    }; //#homework : 해당 코드가 동작하게 변경해주세요 ! hint : proxy, json serialization on axios\n\n    axios(option).then(response => {\n      console.log(response.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC0AC\\uC6A9\\uC790\\uAC00 \\uBC1C\\uAE09\\uBC1B\\uC740 \\uC0AC\\uC6A9\\uC790 \\uCF54\\uB4DC\\uB294 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getAccessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthButton, {\n        title: \"토큰 받기\",\n        onClick: getAccessToken,\n        children: \"\\uD1A0\\uD070 \\uBC1B\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AuthResultPage, \"pGdq4SMUAyJoyoPfrhAPC6/E7e4=\", false, function () {\n  return [useLocation];\n});\n\n_c = AuthResultPage;\nexport default AuthResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthResultPage\");","map":{"version":3,"sources":["/Users/SBJ/project/React/banking_project/src/pages/AuthResultPage.js"],"names":["React","useLocation","queryString","axios","AuthButton","qs","AuthResultPage","search","code","parse","getAccessToken","sendData","stringify","client_id","client_secret","redirect_uri","grant_type","option","method","url","headers","data","then","response","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,EAAP,MAAe,IAAf;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAaN,WAAW,EAA9B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWN,WAAW,CAACO,KAAZ,CAAkBF,MAAlB,CAAjB,CAF2B,CAI3B;;AACA,QAAMG,cAAc,GAAG,MAAM;AAC3B,UAAMC,QAAQ,GAAGN,EAAE,CAACO,SAAH,CAAa;AAC5BJ,MAAAA,IAAI,EAAEA,IADsB;AAE5BK,MAAAA,SAAS,EAAE,sCAFiB;AAG5BC,MAAAA,aAAa,EAAE,sCAHa;AAI5BC,MAAAA,YAAY,EAAE,kCAJc;AAK5BC,MAAAA,UAAU,EAAE;AALgB,KAAb,CAAjB;AAOA,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,GAAG,EAAE,kBAFQ;AAGbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHI;AAMbC,MAAAA,IAAI,EAAEV;AANO,KAAf,CAR2B,CAgB3B;;AACAR,IAAAA,KAAK,CAACc,MAAD,CAAL,CAAcK,IAAd,CAAmBC,QAAQ,IAAI;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACF,IAArB;AACD,KAFD;AAGD,GApBD;;AAsBA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIb;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE,OAAnB;AAA4B,QAAA,OAAO,EAAEA,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD,CAvCD;;GAAMJ,c;UACeL,W;;;KADfK,c;AAyCN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport axios from \"axios\";\nimport AuthButton from \"../components/common/AuthButton\";\nimport qs from \"qs\";\n\nconst AuthResultPage = () => {\n  const { search } = useLocation();\n  const { code } = queryString.parse(search);\n\n  // proxcy setting\n  const getAccessToken = () => {\n    const sendData = qs.stringify({\n      code: code,\n      client_id: \"10866f6e-c280-41e3-bcc0-c3df9cddbcca\",\n      client_secret: \"cd76aef5-bb1e-4cb5-8acb-412577f8c714\",\n      redirect_uri: \"http://localhost:3000/authResult\",\n      grant_type: \"authorization_code\",\n    });\n    const option = {\n      method: \"POST\",\n      url: \"/oauth/2.0/token\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      data: sendData,\n    };\n    //#homework : 해당 코드가 동작하게 변경해주세요 ! hint : proxy, json serialization on axios\n    axios(option).then(response => {\n      console.log(response.data);\n    });\n  };\n\n  return (\n    <>\n      <div>\n        <p>사용자가 발급받은 사용자 코드는 </p>\n        <p>{code}</p>\n        <button onClick={getAccessToken}></button>\n        <AuthButton title={\"토큰 받기\"} onClick={getAccessToken}>\n          토큰 받기\n        </AuthButton>\n      </div>\n    </>\n  );\n};\n\nexport default AuthResultPage;\n"]},"metadata":{},"sourceType":"module"}